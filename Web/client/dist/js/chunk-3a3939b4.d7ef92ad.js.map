{"version":3,"sources":["webpack:///./src/views/Dashboard/Dashboard.vue?612c","webpack:///src/views/Dashboard/Dashboard.vue","webpack:///./src/views/Dashboard/Dashboard.vue?4ce2","webpack:///../../../src/components/VSkeletonLoader/VSkeletonLoader.ts","webpack:///./src/views/Dashboard/Dashboard.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","_l","i","key","guild","id","staticClass","dark","_v","_s","name","staticStyle","staticRenderFns","mixins","props","boilerplate","loading","tile","transition","type","types","default","computed","role","$attrs","classes","elevationClasses","isLoading","rootTypes","actions","article","avatar","button","card","chip","heading","image","paragraph","sentences","table","text","methods","genBone","genBones","bone","generator","Array","length","genStructure","children","mapBones","genSkeleton","on","afterEnter","beforeEnter","beforeLeave","leaveCancelled","resetStyles","bones","onBeforeEnter","el","display","onBeforeLeave","h","class","style","undefined","component","VBtn","VCard","VCardActions","VContainer","VFlex","VImg","VLayout","VListItem","VListItemAvatar","VListItemContent","VList","VListItemTitle","VSkeletonLoader"],"mappings":"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","file":"js/chunk-3a3939b4.d7ef92ad.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',[(_vm.loading)?_c('v-container',{attrs:{\"grid-list-xl\":\"\"}},[_c('v-layout',{attrs:{\"wrap\":\"\"}},[_c('v-flex',{attrs:{\"xs12\":\"\",\"sm6\":\"\",\"lg4\":\"\"}},_vm._l(([1,2,3,4,5,6]),function(i){return _c('v-skeleton-loader',{key:i,attrs:{\"height\":\"94\",\"type\":\"list-item-two-line\"}})}),1)],1)],1):_c('v-container',{attrs:{\"grid-list-xl\":\"\"}},[_c('v-layout',{attrs:{\"wrap\":\"\"}},_vm._l((_vm.guilds),function(guild){return _c('v-flex',{key:guild.id,attrs:{\"xs12\":\"\",\"sm6\":\"\",\"lg4\":\"\"}},[_c('v-card',{staticClass:\"opacity-hover\",attrs:{\"hover\":\"\",\"dark\":_vm.dark,\"elevation\":\"4\"}},[_c('v-list-item',{attrs:{\"three-line\":\"\"}},[_c('v-list-item-content',[_c('v-list-item-title',{staticClass:\"headline mb-1\"},[_vm._v(_vm._s(guild.name))])],1),_c('v-list-item-avatar',{attrs:{\"size\":\"80\",\"color\":\"grey\"}},[(guild.icon)?_c('v-img',{attrs:{\"src\":(\"https://cdn.discordapp.com/icons/\" + (guild.id) + \"/\" + (guild.icon) + \".png\")}}):_c('v-img',{attrs:{\"src\":\"\"}})],1)],1),_c('v-card-actions',[(guild.manageable)?_c('v-btn',{staticStyle:{\"background-color\":\"#00C853\"},attrs:{\"href\":(\"/dashboard/guild/\" + (guild.id)),\"text\":\"\",\"elevation\":\"2\"}},[_vm._v(\"Manage \")]):_c('v-btn',{staticStyle:{\"background-color\":\"#31779d\"},attrs:{\"href\":\"https://discordapp.com/oauth2/authorize?client_id=696756322825404416&scope=bot&permissions=8\",\"text\":\"\",\"elevation\":\"3\"}},[_vm._v(\"Add Bot \")])],1)],1)],1)}),1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <v-container>\r\n        <v-container grid-list-xl v-if=\"loading\">\r\n            <v-layout wrap>\r\n                <v-flex\r\n                        xs12\r\n                        sm6\r\n                        lg4>\r\n                    <v-skeleton-loader\r\n                            height=\"94\"\r\n                            type=\"list-item-two-line\"\r\n                            v-for=\"i in [1,2,3,4,5,6]\"\r\n                            :key=\"i\"\r\n                    >\r\n                    </v-skeleton-loader>\r\n                </v-flex>\r\n            </v-layout>\r\n        </v-container>\r\n        <v-container grid-list-xl v-else>\r\n            <v-layout wrap>\r\n                <v-flex\r\n                        xs12\r\n                        sm6\r\n                        lg4\r\n                        v-for=\"guild in guilds\"\r\n                        :key=\"guild.id\"\r\n                >\r\n                    <v-card hover :dark=\"dark\" elevation=\"4\" class=\"opacity-hover\">\r\n                        <v-list-item three-line>\r\n                            <v-list-item-content>\r\n                                <v-list-item-title class=\"headline mb-1\">{{guild.name}}</v-list-item-title>\r\n                            </v-list-item-content>\r\n\r\n                            <v-list-item-avatar\r\n                                    size=\"80\"\r\n                                    color=\"grey\"\r\n                            >\r\n                                <v-img v-if=\"guild.icon\"\r\n                                       :src=\"`https://cdn.discordapp.com/icons/${guild.id}/${guild.icon}.png`\"></v-img>\r\n                                <v-img v-else src=\"\"></v-img>\r\n                            </v-list-item-avatar>\r\n                        </v-list-item>\r\n\r\n                        <v-card-actions>\r\n                            <v-btn :href=\"`/dashboard/guild/${guild.id}`\" text elevation=\"2\" v-if=\"guild.manageable\"\r\n                                   style=\"background-color: #00C853;\">Manage\r\n                            </v-btn>\r\n                            <v-btn href=\"https://discordapp.com/oauth2/authorize?client_id=696756322825404416&scope=bot&permissions=8\"\r\n                                   text elevation=\"3\" v-else style=\"background-color: #31779d;\">Add Bot\r\n                            </v-btn>\r\n                        </v-card-actions>\r\n                    </v-card>\r\n                </v-flex>\r\n            </v-layout>\r\n        </v-container>\r\n    </v-container>\r\n</template>\r\n<script>\r\n    export default {\r\n        name: \"Dashboard\",\r\n        data: () => ({\r\n            loading: true,\r\n            guilds: []\r\n        }),\r\n        mounted() {\r\n            const {access_token} = this.$route.query;\r\n            if (access_token) localStorage.setItem(\"access_token\", access_token);\r\n            if (!localStorage.getItem(\"access_token\")) location.href = \"/\";\r\n\r\n            fetch(`http://www.blazify3.glitch.me/api/guilds?access_token=${localStorage.getItem(\"access_token\")}`)\r\n                .then(res => res.json())\r\n                .then(body => {\r\n                    if (!body.success) location.href = \"/\";\r\n                    this.guilds = body.data;\r\n                    this.loading = false;\r\n                });\r\n        }\r\n    }\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Dashboard.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Dashboard.vue?vue&type=script&lang=js&\"","// Styles\nimport './VSkeletonLoader.sass'\n\n// Mixins\nimport Elevatable from '../../mixins/elevatable'\nimport Measurable from '../../mixins/measurable'\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode, PropType } from 'vue'\nimport { getSlot } from '../../util/helpers'\n\nexport interface HTMLSkeletonLoaderElement extends HTMLElement {\n  _initialStyle?: {\n    display: string | null\n    transition: string\n  }\n}\n\n/* @vue/component */\nexport default mixins(\n  Elevatable,\n  Measurable,\n  Themeable,\n).extend({\n  name: 'VSkeletonLoader',\n\n  props: {\n    boilerplate: Boolean,\n    loading: Boolean,\n    tile: Boolean,\n    transition: String,\n    type: String,\n    types: {\n      type: Object as PropType<Record<string, string>>,\n      default: () => ({}),\n    },\n  },\n\n  computed: {\n    attrs (): object {\n      if (!this.isLoading) return this.$attrs\n\n      return !this.boilerplate ? {\n        'aria-busy': true,\n        'aria-live': 'polite',\n        role: 'alert',\n        ...this.$attrs,\n      } : {}\n    },\n    classes (): object {\n      return {\n        'v-skeleton-loader--boilerplate': this.boilerplate,\n        'v-skeleton-loader--is-loading': this.isLoading,\n        'v-skeleton-loader--tile': this.tile,\n        ...this.themeClasses,\n        ...this.elevationClasses,\n      }\n    },\n    isLoading (): boolean {\n      return !('default' in this.$scopedSlots) || this.loading\n    },\n    rootTypes (): Record<string, string> {\n      return {\n        actions: 'button@2',\n        article: 'heading, paragraph',\n        avatar: 'avatar',\n        button: 'button',\n        card: 'image, card-heading',\n        'card-avatar': 'image, list-item-avatar',\n        'card-heading': 'heading',\n        chip: 'chip',\n        'date-picker': 'list-item, card-heading, divider, date-picker-options, date-picker-days, actions',\n        'date-picker-options': 'text, avatar@2',\n        'date-picker-days': 'avatar@28',\n        heading: 'heading',\n        image: 'image',\n        'list-item': 'text',\n        'list-item-avatar': 'avatar, text',\n        'list-item-two-line': 'sentences',\n        'list-item-avatar-two-line': 'avatar, sentences',\n        'list-item-three-line': 'paragraph',\n        'list-item-avatar-three-line': 'avatar, paragraph',\n        paragraph: 'text@3',\n        sentences: 'text@2',\n        table: 'table-heading, table-thead, table-tbody, table-tfoot',\n        'table-heading': 'heading, text',\n        'table-thead': 'heading@6',\n        'table-tbody': 'table-row-divider@6',\n        'table-row-divider': 'table-row, divider',\n        'table-row': 'table-cell@6',\n        'table-cell': 'text',\n        'table-tfoot': 'text@2, avatar@2',\n        text: 'text',\n        ...this.types,\n      }\n    },\n  },\n\n  methods: {\n    genBone (text: string, children: VNode[]) {\n      return this.$createElement('div', {\n        staticClass: `v-skeleton-loader__${text} v-skeleton-loader__bone`,\n      }, children)\n    },\n    genBones (bone: string): VNode[] {\n      // e.g. 'text@3'\n      const [type, length] = bone.split('@') as [string, number]\n      const generator = () => this.genStructure(type)\n\n      // Generate a length array based upon\n      // value after @ in the bone string\n      return Array.from({ length }).map(generator)\n    },\n    // Fix type when this is merged\n    // https://github.com/microsoft/TypeScript/pull/33050\n    genStructure (type?: string): any {\n      let children = []\n      type = type || this.type || ''\n      const bone = this.rootTypes[type] || ''\n\n      // End of recursion, do nothing\n      /* eslint-disable-next-line no-empty, brace-style */\n      if (type === bone) {}\n      // Array of values - e.g. 'heading, paragraph, text@2'\n      else if (type.indexOf(',') > -1) return this.mapBones(type)\n      // Array of values - e.g. 'paragraph@4'\n      else if (type.indexOf('@') > -1) return this.genBones(type)\n      // Array of values - e.g. 'card@2'\n      else if (bone.indexOf(',') > -1) children = this.mapBones(bone)\n      // Array of values - e.g. 'list-item@2'\n      else if (bone.indexOf('@') > -1) children = this.genBones(bone)\n      // Single value - e.g. 'card-heading'\n      else if (bone) children.push(this.genStructure(bone))\n\n      return [this.genBone(type, children)]\n    },\n    genSkeleton () {\n      const children = []\n\n      if (!this.isLoading) children.push(getSlot(this))\n      else children.push(this.genStructure())\n\n      /* istanbul ignore else */\n      if (!this.transition) return children\n\n      /* istanbul ignore next */\n      return this.$createElement('transition', {\n        props: {\n          name: this.transition,\n        },\n        // Only show transition when\n        // content has been loaded\n        on: {\n          afterEnter: this.resetStyles,\n          beforeEnter: this.onBeforeEnter,\n          beforeLeave: this.onBeforeLeave,\n          leaveCancelled: this.resetStyles,\n        },\n      }, children)\n    },\n    mapBones (bones: string) {\n      // Remove spaces and return array of structures\n      return bones.replace(/\\s/g, '').split(',').map(this.genStructure)\n    },\n    onBeforeEnter (el: HTMLSkeletonLoaderElement) {\n      this.resetStyles(el)\n\n      if (!this.isLoading) return\n\n      el._initialStyle = {\n        display: el.style.display,\n        transition: el.style.transition,\n      }\n\n      el.style.setProperty('transition', 'none', 'important')\n    },\n    onBeforeLeave (el: HTMLSkeletonLoaderElement) {\n      el.style.setProperty('display', 'none', 'important')\n    },\n    resetStyles (el: HTMLSkeletonLoaderElement) {\n      if (!el._initialStyle) return\n\n      el.style.display = el._initialStyle.display || ''\n      el.style.transition = el._initialStyle.transition\n\n      delete el._initialStyle\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-skeleton-loader',\n      attrs: this.attrs,\n      on: this.$listeners,\n      class: this.classes,\n      style: this.isLoading ? this.measurableStyles : undefined,\n    }, [this.genSkeleton()])\n  },\n})\n","import { render, staticRenderFns } from \"./Dashboard.vue?vue&type=template&id=3f52bbbb&\"\nimport script from \"./Dashboard.vue?vue&type=script&lang=js&\"\nexport * from \"./Dashboard.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VCardActions } from 'vuetify/lib/components/VCard';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VFlex } from 'vuetify/lib/components/VGrid';\nimport { VImg } from 'vuetify/lib/components/VImg';\nimport { VLayout } from 'vuetify/lib/components/VGrid';\nimport { VListItem } from 'vuetify/lib/components/VList';\nimport { VListItemAvatar } from 'vuetify/lib/components/VList';\nimport { VListItemContent } from 'vuetify/lib/components/VList';\nimport { VListItemTitle } from 'vuetify/lib/components/VList';\nimport { VSkeletonLoader } from 'vuetify/lib/components/VSkeletonLoader';\ninstallComponents(component, {VBtn,VCard,VCardActions,VContainer,VFlex,VImg,VLayout,VListItem,VListItemAvatar,VListItemContent,VListItemTitle,VSkeletonLoader})\n"],"sourceRoot":""}